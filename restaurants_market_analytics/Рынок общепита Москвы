{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Рынок заведений общественного питания Москвы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Описание проекта "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проведем исследование рынка заведений общественного питания Москвы,  \n",
    " чтобы составить презентацию для инвесторов. Глобальная цель получить финансирование на реализацию нестандартного проекта: кафе с роботами вместо обслуживающего персонала "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### План работы:\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[1. Знакомимся с данными](#1-bullet)  \n",
    " [- Чтение и предобработка данных](#1.1-bullet)  \n",
    " [- Выводы](#1.2-bullet)  \n",
    " \n",
    "[2. Анализируем данные](#2-bullet)   \n",
    " [- График соотношения видов объектов общественного питания по количеству. Выводы](#2.1-bullet)   \n",
    "  [- График соотношения сетевых и несетевых заведений по количеству. Выводы](#2.2-bullet)   \n",
    "  [- Исследование характера сетевого распространения. Выводы](#2.3-bullet)  \n",
    "  [- Исследование по количеству посадочных мест. Выводы](#2.4-bullet)  \n",
    "  [- Исследование ТОП-10 улиц по количеству объектов общественного питания. Выводы](#2.5-bullet)   \n",
    "  [- Исследования улиц с одиночными объектами общественного питания. Выводы](#2.6-bullet)   \n",
    "  [- Исследование закономерностей распределения количества посадочных мест для топовых улиц. Выводы](#2.7-bullet)   \n",
    "  \n",
    "[3. Общие выводы](#2.8-bullet) \n",
    " \n",
    "[4. Презентация исследования для инвесторов](#3-bullet) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='1-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Знакомимся с данными"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='1.1-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Чтение и предобработка данных"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Импортирует библиотеки и прочитаем фаил"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import stats as st\n",
    "import seaborn as sns\n",
    "import scipy.stats as stats\n",
    "import plotly.express as px\n",
    "import requests\n",
    "import re\n",
    "from bs4 import BeautifulSoup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>151635</td>\n",
       "      <td>СМЕТАНА</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Егора Абакумова, дом 9</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>24309</td>\n",
       "      <td>Кафе «Академия»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абельмановская улица, дом 6</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>21894</td>\n",
       "      <td>ПИЦЦЕТОРИЯ</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 1</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>119365</td>\n",
       "      <td>Кафе «Вишневая метель»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 9, корпус 1</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id             object_name chain object_type  \\\n",
       "0  151635                 СМЕТАНА   нет        кафе   \n",
       "1   77874                  Родник   нет        кафе   \n",
       "2   24309         Кафе «Академия»   нет        кафе   \n",
       "3   21894              ПИЦЦЕТОРИЯ    да        кафе   \n",
       "4  119365  Кафе «Вишневая метель»   нет        кафе   \n",
       "\n",
       "                                             address  number  \n",
       "0         город Москва, улица Егора Абакумова, дом 9      48  \n",
       "1  город Москва, улица Талалихина, дом 2/1, корпус 1      35  \n",
       "2          город Москва, Абельмановская улица, дом 6      95  \n",
       "3            город Москва, Абрамцевская улица, дом 1      40  \n",
       "4  город Москва, Абрамцевская улица, дом 9, корпус 1      50  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_data = pd.read_csv('/datasets/rest_data.csv')\n",
    "rest_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получаем датафрейм из 6 колонок.  \n",
    " По каждому объекту у нас есть id, название, сеть\\не сеть,  \n",
    "  тип заведения, адрес и количество посадочных мест.  \n",
    "   Посмотрим общую информацию по данным"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 15366 entries, 0 to 15365\n",
      "Data columns (total 6 columns):\n",
      "id             15366 non-null int64\n",
      "object_name    15366 non-null object\n",
      "chain          15366 non-null object\n",
      "object_type    15366 non-null object\n",
      "address        15366 non-null object\n",
      "number         15366 non-null int64\n",
      "dtypes: int64(2), object(4)\n",
      "memory usage: 720.4+ KB\n"
     ]
    }
   ],
   "source": [
    "rest_data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Увесистый датасет - 15366 строк!  \n",
    " Посмотрим пропуски и дубликаты "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 15284 entries, 0 to 15365\n",
      "Data columns (total 6 columns):\n",
      "id             15284 non-null int64\n",
      "object_name    15284 non-null object\n",
      "chain          15284 non-null object\n",
      "object_type    15284 non-null object\n",
      "address        15284 non-null object\n",
      "number         15284 non-null int64\n",
      "dtypes: int64(2), object(4)\n",
      "memory usage: 835.8+ KB\n"
     ]
    }
   ],
   "source": [
    "#rest_data.duplicated().sum()\n",
    "rest_data.drop_duplicates(subset = ['object_name','chain','object_type', 'address', 'number'], inplace = True)\n",
    "rest_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             0\n",
       "object_name    0\n",
       "chain          0\n",
       "object_type    0\n",
       "address        0\n",
       "number         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='1.2-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Выводы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По знакомству с данными видим:\n",
    "1. Увесистый датасет на 15366 строк \n",
    "2. Пропусков и дубликатов нет \n",
    "3. Типы данных расставлены верно \n",
    "\n",
    "Приступим к дальнейшему анализу данных "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Анализируем данные  \n",
    " В этом блоке посмотрим графики - исследуем рынок.  \n",
    "  Загрузим все необходимое для постороения графика"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.style.available\n",
    "plt.style.use('seaborn-pastel')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.1-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### График соотношения видов объектов общественного питания по количеству. Выводы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Заменим длинные названия объектов для эстетичных графиков"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['кафе', 'столовая', 'закусочная', 'фастфуд', 'ресторан',\n",
       "       'кафетерий', 'буфет', 'бар', 'отдел кулинарии'], dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_data['object_type'] = rest_data['object_type'].replace('предприятие быстрого обслуживания', 'фастфуд')\n",
    "rest_data['object_type'] = rest_data['object_type'].replace('магазин (отдел кулинарии)', 'отдел кулинарии')\n",
    "rest_data['object_type'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>object_type</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>кафе</td>\n",
       "      <td>6071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>столовая</td>\n",
       "      <td>2584</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>ресторан</td>\n",
       "      <td>2282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>фастфуд</td>\n",
       "      <td>1898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>бар</td>\n",
       "      <td>855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>буфет</td>\n",
       "      <td>577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>кафетерий</td>\n",
       "      <td>395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>закусочная</td>\n",
       "      <td>349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>отдел кулинарии</td>\n",
       "      <td>273</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       object_type    id\n",
       "3             кафе  6071\n",
       "7         столовая  2584\n",
       "6         ресторан  2282\n",
       "8          фастфуд  1898\n",
       "0              бар   855\n",
       "1            буфет   577\n",
       "4        кафетерий   395\n",
       "2       закусочная   349\n",
       "5  отдел кулинарии   273"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_cnt = rest_data.groupby('object_type').agg({'id':'count'}).reset_index()\n",
    "rest_cnt.sort_values(by='id', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Наблюдаем, что больше распространены форматы кафе, менее популярны кулинарии."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "sns.barplot(x='object_type', y='id', data=rest_cnt)\n",
    "plt.title(\"Количество видов объектов общественного питания\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.xlabel(\"Вид объекта общественного питания\")\n",
    "plt.ylabel(\"Количествo\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По графику видим, что:\n",
    "1. Самым распространенным форматом является кафе, затем столовык и рестораны \n",
    "2. Меньше всего отделов кулинарии, закусочных и кафетериев.\n",
    "3. Кафе как более демократичный вариант вариант - и распространены больше -  \n",
    " это 39,7% по нашей выборке.  \n",
    "  Популярность столовых обусловлена тем, что она есть в каждом учереждении городской инфраструктуры (школы, вокзалы, бц)  \n",
    "   Рестораны - это Москва - здесь есть люди, у кого есть деньги, здесь много туристов и бизнес-активностей соответствующего уровня."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.2-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### График соотношения сетевых и несетевых заведений по количеству. Выводы  \n",
    " \"Выживают только сети\" - проверим. Посмотрим соотношение сетевых и несетевых заведений -   \n",
    "  посторим круговую диаграмму."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,7))\n",
    "plt.pie(rest_data.groupby('chain')['object_name'].count(),autopct='%1.1f%%')\n",
    "plt.legend(['Сеть', 'Не сеть'])\n",
    "plt.title('Соотношение сетевых и несетевых заведений по количеству')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Интересные получаются выводы:\n",
    "1. Несетевых заведений больше в 3 раза\n",
    "2. Предположу, что это связанно с \n",
    " - Элитарностью некоторых ресторанов, чья ценность в том, чтобы иметь  легкий флер недоступности\n",
    " - Дороговизной арендных площадей в Москве"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.3-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Исследование характера сетевого распространения. Выводы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>4675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>нет</td>\n",
       "      <td>столовая</td>\n",
       "      <td>2581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>нет</td>\n",
       "      <td>ресторан</td>\n",
       "      <td>1739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>1396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>нет</td>\n",
       "      <td>фастфуд</td>\n",
       "      <td>1110</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   chain object_type    id\n",
       "12   нет        кафе  4675\n",
       "16   нет    столовая  2581\n",
       "15   нет    ресторан  1739\n",
       "3     да        кафе  1396\n",
       "17   нет     фастфуд  1110"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chain_cnt = rest_data.groupby(['chain', 'object_type']).agg({'id':'count'}).reset_index()\n",
    "chain_cnt.sort_values(by='id', ascending=False).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "sns.barplot(x='object_type', y='id', hue='chain', data=chain_cnt)\n",
    "plt.title(\"Сетевое и несетевое распространение объектов\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.xlabel(\"Вид объекта общественного питания\")\n",
    "plt.ylabel(\"Количество\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сетевое распросранение заметно на форматах кафе, рестораны и фастфуд.  \n",
    " Фастфуд объясним тем, что фаст он во всем - это дешево, быстро и удобно с точки зрения досягаемости.  \n",
    "  Кафе и рестораны хотят захватить большую долю рынка и располагаются в разных районах для удобства своих постоянных гостей,  \n",
    "   так чтобы гость и ланч провел и на выходных с друзтями отдохнул в заведении сети."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ответим на вопрос - Что характерно для сетевых заведений:  \n",
    "     много заведений с небольшим числом посадочных мест в каждом  \n",
    "         или мало заведений с большим количеством посадочных мест?  \n",
    "          Для этого вытащим количество о сетевых заведениях и медиальном количестве посадочных мест в них"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>object_type</th>\n",
       "      <th>id</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>кафе</td>\n",
       "      <td>1396</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>фастфуд</td>\n",
       "      <td>788</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>ресторан</td>\n",
       "      <td>543</td>\n",
       "      <td>89.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>отдел кулинарии</td>\n",
       "      <td>78</td>\n",
       "      <td>3.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>закусочная</td>\n",
       "      <td>56</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>кафетерий</td>\n",
       "      <td>52</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>бар</td>\n",
       "      <td>37</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>буфет</td>\n",
       "      <td>11</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>столовая</td>\n",
       "      <td>3</td>\n",
       "      <td>120.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       object_type    id  number\n",
       "3             кафе  1396    40.0\n",
       "8          фастфуд   788    25.0\n",
       "6         ресторан   543    89.0\n",
       "5  отдел кулинарии    78     3.5\n",
       "2       закусочная    56     8.0\n",
       "4        кафетерий    52     8.0\n",
       "0              бар    37    45.0\n",
       "1            буфет    11     0.0\n",
       "7         столовая     3   120.0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "places_chain = rest_data.query('chain == \"да\"')\n",
    "places = places_chain.groupby(['object_type']).agg({'id' : 'count', 'number' : 'median'}).reset_index()\n",
    "places.sort_values(by='id', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(places);"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Видим, что в тренде у сетевых заведений малое количество мест.  \n",
    " Нарисуем нагляднее.  \n",
    "  зададим пояснения , что до 40 мест - мало , а 80 и более - это много"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "big_cnt_chain = rest_data['id'][(rest_data['number'] > 80)\n",
    "                                & (rest_data['chain'] == \"да\")].count()\n",
    "small_cnt_chain = rest_data['id'][(rest_data['number'] < 40)\n",
    "                                & (rest_data['chain'] == \"да\")\n",
    "                                & (rest_data['number'] > 0)].count()                        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Создадим датафрейм по новым данным"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_chain_cnt = pd.DataFrame([big_cnt_chain, small_cnt_chain],\n",
    "                             index = ['Много посадочных мест', 'Мало посадочных мест'])\n",
    "num_chain_cnt.columns = ['rest_count']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:2: MatplotlibDeprecationWarning:\n",
      "\n",
      "Non-1D inputs to pie() are currently squeeze()d, but this behavior is deprecated since 3.1 and will be removed in 3.3; pass a 1D array instead.\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10,7))\n",
    "plt.pie(num_chain_cnt, autopct='%1.1f%%')\n",
    "plt.legend(['Много мест', 'Мало мест'])\n",
    "plt.title('Соотношение сетевых заведений по количеству мест')\n",
    "plt.show()\n",
    "\n",
    "from pandas.plotting import register_matplotlib_converters\n",
    "register_matplotlib_converters();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Выводы:\n",
    "1. Сетевое распросранение заметно на форматах кафе, рестораны и фастфуд\n",
    "2. Для сетевых заведений характерно большее количество заведений с меньшим количеством мест\n",
    " Предположу, что это обусловлено и высокой конкуренцией и дороговизной аренды."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.4-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Исследование по количеству посадочных мест. Выводы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>object_type</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>столовая</td>\n",
       "      <td>130.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>ресторан</td>\n",
       "      <td>97.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>буфет</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>бар</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>кафе</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>фастфуд</td>\n",
       "      <td>21.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>кафетерий</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>закусочная</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>отдел кулинарии</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       object_type  number\n",
       "7         столовая   130.0\n",
       "6         ресторан    97.0\n",
       "1            буфет    52.0\n",
       "0              бар    44.0\n",
       "3             кафе    40.0\n",
       "8          фастфуд    21.0\n",
       "4        кафетерий     9.0\n",
       "2       закусочная     8.0\n",
       "5  отдел кулинарии     6.0"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "guest_place = rest_data.pivot_table(index='object_type', values='number', aggfunc='mean').reset_index()\n",
    "guest_place.sort_values(by='number', ascending=False).round().head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "sns.barplot(x='object_type', y='number', data=guest_place)\n",
    "plt.title(\"Количество посадочных мест по типам объектов\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.xlabel(\"Вид объекта общественного питания\")\n",
    "plt.ylabel(\"Количествo\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Итого получаем:\n",
    "1. Наибольшее количество посадочных мест у столовой, на втором месте рестораны - тут все понятно: в столовых и посадочных мет больше и скорость обслуживания высокая. Рестораны демонстируют свою грациозность интерьеров.\n",
    "2. Меньше всего ожидаемо у кафетериев, закусочных и магазинов (отдел кулинарии)\n",
    "3. Камерная атмосфера так же характерна для баров и кафе. Интересно, что в буфетах много посадочных мест. Возможно, это обосновано отсутствием конкурентов на территории."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.5-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Исследование ТОП-10 улиц по количеству объектов общественного питания.   \n",
    " Вычленим для начала из адреса названия улиц. Затем сгруппируем и посмотрим лидеров."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import requests\n",
    "#import re\n",
    "#from bs4 import BeautifulSoup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "      <th>street</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>151635</td>\n",
       "      <td>СМЕТАНА</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Егора Абакумова, дом 9</td>\n",
       "      <td>48</td>\n",
       "      <td>улица Егора Абакумова</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "      <td>улица Талалихина</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>24309</td>\n",
       "      <td>Кафе «Академия»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абельмановская улица, дом 6</td>\n",
       "      <td>95</td>\n",
       "      <td>Абельмановская улица</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>21894</td>\n",
       "      <td>ПИЦЦЕТОРИЯ</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 1</td>\n",
       "      <td>40</td>\n",
       "      <td>Абрамцевская улица</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>119365</td>\n",
       "      <td>Кафе «Вишневая метель»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абрамцевская улица, дом 9, корпус 1</td>\n",
       "      <td>50</td>\n",
       "      <td>Абрамцевская улица</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id             object_name chain object_type  \\\n",
       "0  151635                 СМЕТАНА   нет        кафе   \n",
       "1   77874                  Родник   нет        кафе   \n",
       "2   24309         Кафе «Академия»   нет        кафе   \n",
       "3   21894              ПИЦЦЕТОРИЯ    да        кафе   \n",
       "4  119365  Кафе «Вишневая метель»   нет        кафе   \n",
       "\n",
       "                                             address  number  \\\n",
       "0         город Москва, улица Егора Абакумова, дом 9      48   \n",
       "1  город Москва, улица Талалихина, дом 2/1, корпус 1      35   \n",
       "2          город Москва, Абельмановская улица, дом 6      95   \n",
       "3            город Москва, Абрамцевская улица, дом 1      40   \n",
       "4  город Москва, Абрамцевская улица, дом 9, корпус 1      50   \n",
       "\n",
       "                  street  \n",
       "0  улица Егора Абакумова  \n",
       "1       улица Талалихина  \n",
       "2   Абельмановская улица  \n",
       "3     Абрамцевская улица  \n",
       "4     Абрамцевская улица  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "words = ['улица','ул','переулок','шоссе','проспект','площадь','проезд',\n",
    "         'село','аллея','бульвар','набережная','тупик','линия']\n",
    "\n",
    "str_pat = r\".*,\\s*\\b([^,]*?(?:{})\\b[^,]*)[,$]+\".format(\"|\".join(words))\n",
    "\n",
    "rest_data[\"street\"] = rest_data[\"address\"].str.extract(str_pat, flags=re.I)\n",
    "rest_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "street_place = rest_data.pivot_table(index='street', values='id', aggfunc='count').reset_index()\n",
    "top_10 = street_place.sort_values(by='id', ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "sns.barplot(x='street', y='id', data=top_10)\n",
    "plt.title(\"ТОП-10 улиц по количеству объектов\")\n",
    "plt.xticks(rotation=45)\n",
    "plt.xlabel(\"Название улицы\")\n",
    "plt.ylabel(\"Количествo\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Наглядно график демонстирует, что предприятия общественного питания базируются  \n",
    " в местах повышенного спроса у туристов и в местах бизнес-активности. Посмотрим подробнее на районы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Зададим источники для поиска районов по улицам"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>areaid</th>\n",
       "      <th>okrug</th>\n",
       "      <th>area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Выставочный переулок</td>\n",
       "      <td>17</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Пресненский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>улица Гашека</td>\n",
       "      <td>17</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Пресненский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Большая Никитская улица</td>\n",
       "      <td>17</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Пресненский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Глубокий переулок</td>\n",
       "      <td>17</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Пресненский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Большой Гнездниковский переулок</td>\n",
       "      <td>17</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Пресненский район</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            street  areaid okrug               area\n",
       "0             Выставочный переулок      17   ЦАО  Пресненский район\n",
       "1                     улица Гашека      17   ЦАО  Пресненский район\n",
       "2          Большая Никитская улица      17   ЦАО  Пресненский район\n",
       "3                Глубокий переулок      17   ЦАО  Пресненский район\n",
       "4  Большой Гнездниковский переулок      17   ЦАО  Пресненский район"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "streets_data = pd.read_csv('http://hubofdata.ru/storage/f/2013-10-22T09%3A25%3A27.793Z/mosgaz-streets.csv')\n",
    "streets_data['streetname'] = streets_data['streetname'].astype('str')\n",
    "streets_data = streets_data.rename(columns={'streetname': 'street'})\n",
    "streets_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Состыкуем теперь наши датафреймы по схожему столбцу"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "      <th>street</th>\n",
       "      <th>areaid</th>\n",
       "      <th>okrug</th>\n",
       "      <th>area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>151635</td>\n",
       "      <td>СМЕТАНА</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Егора Абакумова, дом 9</td>\n",
       "      <td>48</td>\n",
       "      <td>улица Егора Абакумова</td>\n",
       "      <td>86.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Ярославский Район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "      <td>улица Талалихина</td>\n",
       "      <td>18.0</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Таганский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "      <td>улица Талалихина</td>\n",
       "      <td>117.0</td>\n",
       "      <td>ЮВАО</td>\n",
       "      <td>Нижегородский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>77874</td>\n",
       "      <td>Родник</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, улица Талалихина, дом 2/1, корпус 1</td>\n",
       "      <td>35</td>\n",
       "      <td>улица Талалихина</td>\n",
       "      <td>133.0</td>\n",
       "      <td>ЮЗАО</td>\n",
       "      <td>Район Южное Бутово</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>24309</td>\n",
       "      <td>Кафе «Академия»</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, Абельмановская улица, дом 6</td>\n",
       "      <td>95</td>\n",
       "      <td>Абельмановская улица</td>\n",
       "      <td>18.0</td>\n",
       "      <td>ЦАО</td>\n",
       "      <td>Таганский район</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       id      object_name chain object_type  \\\n",
       "0  151635          СМЕТАНА   нет        кафе   \n",
       "1   77874           Родник   нет        кафе   \n",
       "2   77874           Родник   нет        кафе   \n",
       "3   77874           Родник   нет        кафе   \n",
       "4   24309  Кафе «Академия»   нет        кафе   \n",
       "\n",
       "                                             address  number  \\\n",
       "0         город Москва, улица Егора Абакумова, дом 9      48   \n",
       "1  город Москва, улица Талалихина, дом 2/1, корпус 1      35   \n",
       "2  город Москва, улица Талалихина, дом 2/1, корпус 1      35   \n",
       "3  город Москва, улица Талалихина, дом 2/1, корпус 1      35   \n",
       "4          город Москва, Абельмановская улица, дом 6      95   \n",
       "\n",
       "                  street  areaid okrug                 area  \n",
       "0  улица Егора Абакумова    86.0  СВАО    Ярославский Район  \n",
       "1       улица Талалихина    18.0   ЦАО      Таганский район  \n",
       "2       улица Талалихина   117.0  ЮВАО  Нижегородский район  \n",
       "3       улица Талалихина   133.0  ЮЗАО   Район Южное Бутово  \n",
       "4   Абельмановская улица    18.0   ЦАО      Таганский район  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_data_1 = rest_data.merge(streets_data, how='left', on='street')\n",
    "rest_data_1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>id_x</th>\n",
       "      <th>id_y</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "      <th>areaid</th>\n",
       "      <th>okrug</th>\n",
       "      <th>area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "      <td>70.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Алексеевский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "      <td>86.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Ярославский Район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "      <td>78.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Район Марьина роща</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "      <td>79.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Останкинский район</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "      <td>81.0</td>\n",
       "      <td>СВАО</td>\n",
       "      <td>Район Ростокино</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          street  id_x    id_y     object_name chain object_type  \\\n",
       "0  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "1  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "2  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "3  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "4  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "\n",
       "                                        address  number  areaid okrug  \\\n",
       "0  город Москва, проспект Мира, дом 5, корпус 1      10    70.0  СВАО   \n",
       "1  город Москва, проспект Мира, дом 5, корпус 1      10    86.0  СВАО   \n",
       "2  город Москва, проспект Мира, дом 5, корпус 1      10    78.0  СВАО   \n",
       "3  город Москва, проспект Мира, дом 5, корпус 1      10    79.0  СВАО   \n",
       "4  город Москва, проспект Мира, дом 5, корпус 1      10    81.0  СВАО   \n",
       "\n",
       "                 area  \n",
       "0  Алексеевский район  \n",
       "1   Ярославский Район  \n",
       "2  Район Марьина роща  \n",
       "3  Останкинский район  \n",
       "4     Район Ростокино  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_district = top_10.merge(rest_data_1, on='street', how='left')\n",
    "top_district.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Найдем в каких районах находится наши ТОП-10 ресторанных мест"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>area</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>47</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>Ярославский Район</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>46</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>Район Свиблово</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>45</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>Район Ростокино</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>44</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>Район Марьина роща</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>43</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>Останкинский район</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           street                area   id\n",
       "47  проспект Мира   Ярославский Район  204\n",
       "46  проспект Мира      Район Свиблово  204\n",
       "45  проспект Мира     Район Ростокино  204\n",
       "44  проспект Мира  Район Марьина роща  204\n",
       "43  проспект Мира  Останкинский район  204"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_district = top_10.merge(streets_data, on='street', how='left')\n",
    "top_district = top_district.groupby(['street', 'area']).agg({'id':'sum'}).reset_index()\n",
    "top_district.sort_values(by='id', ascending=False).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Отметим себе, что улицы в Москве длинее, чем районы  \n",
    " Посмотрим наглядно"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(16,4))\n",
    "sns.barplot(x='area', y='id', data=top_district)\n",
    "plt.title(\"ТОП-10 районов по количеству объектов\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.xlabel(\"Название района\")\n",
    "plt.ylabel(\"Количествo\");"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По проведенным исследованиям улиц Москвы - заметили:\n",
    "1. Наибольшее количество заведений  в Москве приходится на районы вдоль Проспекта мира\n",
    "2. По анализу ТОП-10 улиц видим, что в топ поднимаются улицы с активным движением туристов, высокой бизнес-активностью,  \n",
    " а также в ТОП попадают плотнонаселенные улицы - Кировоградская, например.\n",
    "3. На графифе также видим, что большое количество заведений в плотно населенных районах (Бутово, Чертаново)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.6-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Исследования улиц с одиночными объектами общественного питания. Выводы"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1-й Балтийский переулок</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1-й Басманный переулок</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1-й Ботанический проезд</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>1-й Вешняковский проезд</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1-й Голутвинский переулок</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      street  id\n",
       "2    1-й Балтийский переулок   1\n",
       "3     1-й Басманный переулок   1\n",
       "4    1-й Ботанический проезд   1\n",
       "7    1-й Вешняковский проезд   1\n",
       "9  1-й Голутвинский переулок   1"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anti_top_10 = street_place.query('id == 1')\n",
    "anti_top_10.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 551 entries, 2 to 1897\n",
      "Data columns (total 2 columns):\n",
      "street    551 non-null object\n",
      "id        551 non-null int64\n",
      "dtypes: int64(1), object(1)\n",
      "memory usage: 12.9+ KB\n"
     ]
    }
   ],
   "source": [
    "anti_top_10.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Итого,  у нас 551 улица имеет по 1 объекту.  \n",
    " Посмотрим районы с минимальным количеством объектов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>area</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1-й Балтийский переулок</td>\n",
       "      <td>Район Аэропорт</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1-й Басманный переулок</td>\n",
       "      <td>Басманный район</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1-й Басманный переулок</td>\n",
       "      <td>Красносельский район</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1-й Ботанический проезд</td>\n",
       "      <td>Район Свиблово</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1-й Вешняковский проезд</td>\n",
       "      <td>Рязанский район</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    street                  area  id\n",
       "0  1-й Балтийский переулок        Район Аэропорт   1\n",
       "1   1-й Басманный переулок       Басманный район   1\n",
       "2   1-й Басманный переулок  Красносельский район   1\n",
       "3  1-й Ботанический проезд        Район Свиблово   1\n",
       "4  1-й Вешняковский проезд       Рязанский район   1"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anti_top_10_district = anti_top_10.merge(streets_data, on='street', how='left')\n",
    "anti_top_10_district_1 = anti_top_10_district.groupby(['street', 'area']).agg({'id':'sum'}).reset_index()\n",
    "anti_top_10_district_1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "anti_top_10_district_1['area'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Вывод по итогам расчетов - улицы с одиночными объектами есть в 80% районов Москвы  \n",
    " (по данным Яндекса в Москве сейчас 125 районов)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.7-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Исследование закономерностей распределения количества посадочных мест для топовых улиц. Выводы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Для начала посмотрим усредненные показатели - посмотрим перцентили."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>id_x</th>\n",
       "      <th>id_y</th>\n",
       "      <th>object_name</th>\n",
       "      <th>chain</th>\n",
       "      <th>object_type</th>\n",
       "      <th>address</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>149899</td>\n",
       "      <td>Сухарева Башня</td>\n",
       "      <td>нет</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 5, корпус 1</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>69300</td>\n",
       "      <td>Ваби-Саби</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 29</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>71378</td>\n",
       "      <td>Шоколадница</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 29</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>146123</td>\n",
       "      <td>Джаганнат</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 31</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>204</td>\n",
       "      <td>137644</td>\n",
       "      <td>Krispy Creme</td>\n",
       "      <td>да</td>\n",
       "      <td>кафе</td>\n",
       "      <td>город Москва, проспект Мира, дом 40</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          street  id_x    id_y     object_name chain object_type  \\\n",
       "0  проспект Мира   204  149899  Сухарева Башня   нет        кафе   \n",
       "1  проспект Мира   204   69300       Ваби-Саби    да        кафе   \n",
       "2  проспект Мира   204   71378     Шоколадница    да        кафе   \n",
       "3  проспект Мира   204  146123       Джаганнат    да        кафе   \n",
       "4  проспект Мира   204  137644    Krispy Creme    да        кафе   \n",
       "\n",
       "                                        address  number  \n",
       "0  город Москва, проспект Мира, дом 5, корпус 1      10  \n",
       "1           город Москва, проспект Мира, дом 29      64  \n",
       "2           город Москва, проспект Мира, дом 29      40  \n",
       "3           город Москва, проспект Мира, дом 31      25  \n",
       "4           город Москва, проспект Мира, дом 40      36  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#street_place_1 = rest_data.pivot_table(index='street', values='number', aggfunc='sum').reset_index()\n",
    "#top_10_1 = street_place_1.sort_values(by='number', ascending=False).head(10)\n",
    "#top_10_1\n",
    "\n",
    "top_places = top_10.merge(rest_data, on='street', how='left')\n",
    "top_places.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>street</th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>проспект Мира</td>\n",
       "      <td>46.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Ленинский проспект</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Кутузовский проспект</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Ленинградский проспект</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>проспект Вернадского</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Варшавское шоссе</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Кировоградская улица</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Пресненская набережная</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Каширское шоссе</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Профсоюзная улица</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   street  number\n",
       "0           проспект Мира    46.5\n",
       "1      Ленинский проспект    45.0\n",
       "2    Кутузовский проспект    40.0\n",
       "3  Ленинградский проспект    40.0\n",
       "4    проспект Вернадского    40.0\n",
       "5        Варшавское шоссе    30.0\n",
       "6    Кировоградская улица    30.0\n",
       "7  Пресненская набережная    30.0\n",
       "8         Каширское шоссе    25.0\n",
       "9       Профсоюзная улица    24.0"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_places_1 = top_places.pivot_table(index='street', values='number', aggfunc='median').sort_values(by='number', ascending=False).reset_index()                                       \n",
    "top_places_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([45.825, 46.365])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(top_places_1['number'], [95, 99])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получаем близкие значения перцентилей - значит, заведения из нашей выборки по топовым улицам  \n",
    " не имеют больших различий вместительностью."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>10.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>35.05000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>8.18688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>24.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>30.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>35.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>40.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>46.50000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         number\n",
       "count  10.00000\n",
       "mean   35.05000\n",
       "std     8.18688\n",
       "min    24.00000\n",
       "25%    30.00000\n",
       "50%    35.00000\n",
       "75%    40.00000\n",
       "max    46.50000"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_places_1.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Более подробно видим, что в среднем у нас 35 посадочных мест.  \n",
    " При рассадке гостей по 4 человека за стол - мы получаем,  \n",
    "  что среднее наше заведение  в выборке имеет всего 8-9 столиков"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='2.8-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Общие выводы"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы проанализировали данные и вывели следующие закономерности:\n",
    "1. Москва богата типами объектов общественного питания - наиболее распространенны кафе, столовые, рестораны и фастфуд.  \n",
    " Связано это с тем, что кафе наиболее демократичный тип заведения, столовая предлагает быстро, сытно и недорого сбалансированное питание - актуально для бизнес-центров и объектов типа школ, вокзалов и т.п.\n",
    "  Ресторанов много - так как город в том числе и для туристов, а не только для работяг.  \n",
    "   С фастфудом все понятно - набегу и что-то хорошо знакомое.\n",
    "2. В Москве больше несетевых заведений - в 3 раза больше , чем сетей.  \n",
    " Обосновано это, предположу, дороговизной объектов недвижимости,  \n",
    "  а так же колосальными бюджетами на некоторые заведения типа ресторан, например.  \n",
    "   К тому же, возможно, выгоднее держать один грандиозный по степени сервиса/пафоса/помпезности ресторан,  \n",
    "    чем сеть, где еще нужно держать целый штат персонала по регулированию качества обслуживания  \n",
    "     (чтобы в сети все было по одинаковым стандартам)\n",
    "3. Популярны сети для кафе, ресторанов и фастфудов. Так же видим закономерность, что  \n",
    " больше заведений среди сетевых с малым количеством мест.\n",
    "4. По количеству мест, вполне ожидаемо, лидирует столовые, за ними рестораны и буфеты - \n",
    " Столовые и буфеты рабтают в основном в местах большой проходимости - поэтому и мест много.  \n",
    "  Рестораны предлагают банкетное обслуживание крупных мероприятий.\n",
    "5. Анализ ТОП-10 улиц показал, что максимальное количество посадочных мест  \n",
    " в районах бизнес-активности, туристических местах, а также плотно населенных локациях.  \n",
    "  По нашй выборке получили максимальную концентрацию вдоль Проспекта Мира\n",
    "6. Проанализировав количество посадочных мест в особо популярных локациях,  \n",
    " видим, что в среднем у нас 35 посадочных мест и не более 1% заведении с более чем 46 местами."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a id='3-bullet'></a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Презентация исследования для инвесторов"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Презентация: https://dropmefiles.com/yRS0Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.8"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "323.984px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
